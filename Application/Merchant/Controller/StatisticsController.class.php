<?php

namespace Manager\Controller;

/**
 * 统计模块
 * Class StatisticsController
 * @package Manager\Controller
 */
class StatisticsController extends BaseController {

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    /**
     * 用户注册统计
     * 1 统计 开始时间 - 结束时间内 每个月份的统计
     * 2 统计地区
     */
    public function userRegSta()
    {
        // 传入起始结束时间
        if(empty($_POST['start_time']) && empty($_POST['end_time'])){
            $start_time = date('Y-m-d',(time() - intval(120 * 3600)));
            $end_time = date('Y-m-d',time());
        }else{
            $start_time = I('post.start_time');
            $end_time = I('post.end_time');
        }
        if($_POST['isuser'])$isuser = $_POST['isuser'];
        // 获得 MAXTime / MINTIME
        $time = M('member') -> where(array('satatus'=>array('neq',9))) -> field('MIN(create_time) as min_time,MAX(create_time) as max_time')-> find();
        //横坐标赋值时间
        if($_POST['region'])$region = $_POST['region'];
        $x_res = D('Statistical','Service')->createX($start_time,$end_time);
        $this->assign('region', $this->region());
        $this->assign('x_date',$x_res['x_date']);
        $this->assign('time',$time);
        $this->everyDay($start_time,$end_time,$region,$isuser);
        $this->display();
    }

    /**
     * 统计 按照条件生成 线形图
     * @param $start_time
     * @param $end_time
     * @param $result
     */
    public function everyDay($start_time,$end_time,$region='',$isuser=''){

        $where['status'] = array('neq',9); // 判断用户是否被删除
        if($region != '全市' )$where['register_province'] = array('like','%'.$region.'%');
        if($isuser != '' )
            if($isuser != 3){
                $where['m_type'] = $isuser == 1 ? 0 : 2 ;
            }
        $RegFromTime = array(
            array('title'=>'人数','where'=>$where,'obj'=>M('member'),'flag'=>array('Count','id'))
        );
        $isUserName = isUser($isuser);
        //数据参数
        $line_parameter = $RegFromTime;
        //获取数据
        $sales_line_data = D('Statistical','Service')->getLineData($start_time,$end_time,$line_parameter);
        //创建折线
        $this->assign('day_line',D('Statistical','Service')->createLine($sales_line_data));
        //顶部文字subtitle
        $this->assign('day_date_flag','【平台注册人数统计】　'.$start_time.'至'.$end_time. '('.$region.$isUserName.'注册人数)');
    }

    /**
     * 获得 地区
     */
    public function region()
    {
        $sql = 'SELECT register_province FROM __PREFIX__member WHERE status != 9 GROUP BY register_province ';
        $result = M() -> query($sql);
        return $result;
    }

    /**
     * 统计海猿订单数量(销售量)
     *
     */
    public function saleSta()
    {
        //获得现存的所有港口
        $havenList = M('haven') -> where(array('status'=>array('neq',9)))->field('id,cn_name')->select();
        // 传入起始结束时间
        if(!empty($_POST['port'])) $port = $_POST['port'];
        if(empty($_POST['start_time']) && empty($_POST['end_time'])){
            $start_time = date('Y-m-d',(time() - intval(120 * 3600)));
            $end_time = date('Y-m-d',time());
        }else{
            $start_time = I('post.start_time');
            $end_time = I('post.end_time');
        }
        // 获得 MAXTime / MINTime
        $where['status'] = array(array('egt',2),array('lt',4),'AND');
        $time = M('order') -> where($where) -> field('MIN(confirm_receipts_time) as min_time,MAX(confirm_receipts_time) as max_time')-> find();
        //横坐标赋值时间
        $x_res = D('Statistical','Service')->createX($start_time,$end_time);
        $this->getLineOrder($start_time,$end_time,$port);
        $this->assign('x_date',$x_res['x_date']);
        $this->assign('time',$time);
        $this->assign('result',$havenList);
        $this->display();
    }

    /**
     * 统计 按照条件生成 线形图
     * @param $start_time
     * @param $end_time
     * @param $result
     */
    public function getLineOrder($start_time,$end_time,$port=''){
        $where['status'] = array(array('egt',2),array('lt',4),'AND');
        if($port)$where['haven_id']= $port;
        $RegFromTime = array(
            array('title'=>'平台订单量','where'=>$where,'obj'=>M('order'),'flag'=>array('Count','id')),
            array('title'=>'平台交易额','where'=>$where,'obj'=>M('order'),'flag'=>array('SUM','totalprice'))
        );
        // 获取港口名称
        $haven = M('haven') -> where(array('id'=>$port))->getField('cn_name');
        if(!$haven) $haven = '全';
        //获取数据
        $sales_line_data = D('Statistical','Service')->getLineOrder($start_time,$end_time,$RegFromTime);
        //创建折线
        $this->assign('day_line',D('Statistical','Service')->createLine($sales_line_data));
        //顶部文字subtitle
        $this->assign('day_date_flag','【平台交易额统计】　'.$start_time.'至'.$end_time.'('.$haven.')港口交易额');
    }

}
