<?php

namespace Merchant\Controller;

/**
 * @author zhouwei
 * Class OrderController
 * @package Merchant\Controller
 * 订单管理 - 订单列表 - 控制器
 */
class OrderController extends BaseController {

    public function getIndexRelation()
    {
        $deliveryCompany = M('delivery_company')->select();
        $deliveryNum = count($deliveryCompany);
        foreach($deliveryCompany as $k => $v){
           if($k == 0){
               $str = '<select class="delivery" name="delivery">';
               $str .= '<option value="'.$v['delivery_code'].'">'.$v['company_name'].'</option>';
           }else if($k +1 == $deliveryNum){
               $str .= '<option value="'.$v['delivery_code'].'">'.$v['company_name'].'</option>';
               $str .= '</select>';
               $str .= '<input type="text" name="delivery_sn" class="delivery_sn" placeholder="请输入快递单号"/>';
           }else{
               $str .= '<option value="'.$v['delivery_code'].'">'.$v['company_name'].'</option>';
           }
        }
        $this -> assign('str',$str);
        parent::getIndexRelation(); // TODO: Change the autogenerated stub
    }

    /**
     * 频道列表页
     */
    function alreadyIndex() {
//        $this->checkRule(self::$rule);
        $Object = D(CONTROLLER_NAME,'Logic');
        $result = $Object->getAlreadyList(I('request.'));
        if($result) {
//         	dump($result['list']);
            $this->assign('page', $result['page']);
            $this->assign('list', $result['list']);
        } else {
            $this->error($Object->getLogicError());
        }
        // 记录当前列表页的cookie
        Cookie('__forward__',$_SERVER['REQUEST_URI']);
        $this->getIndexRelation();
        $this->display('alreadyIndex');
    }


    /**
     * 频道列表页
     */
    function notIndex() {
//        $this->checkRule(self::$rule);
        $Object = D(CONTROLLER_NAME,'Logic');
        $result = $Object->getNotList(I('request.'));
        if($result) {
//         	dump($result['list']);
            $this->assign('page', $result['page']);
            $this->assign('list', $result['list']);
        } else {
            $this->error($Object->getLogicError());
        }
        // 记录当前列表页的cookie
        Cookie('__forward__',$_SERVER['REQUEST_URI']);
        $this->getIndexRelation();
        $this->display('notIndex');
    }

    /**
     * 选择售后状态
     */
    function selectSaleStatus()
    {
        $session = session('merInfo'); //mer_id
        $post = $_POST;
        $as_id = M('AfterSale') -> where(array('order_id'=>$post['id'],'merchant_id'=>$session['mer_id'])) -> getField('id');
        if($post['status'] == 2){
            $data['title'] = '卖家已同意申请';
        }else{
            $data['title'] = '卖家已拒绝申请';
        }
        $data['status'] =$post['status'];
        $data['log_type'] =2;
        $data['as_id'] = $as_id;
        $data['create_time'] = time();

        $model = M('AfterSaleLog') -> data($data) -> add();
        if($model){
            if($post['status'] == 2){
                M('AfterSale') -> where(array('order_id'=>$post['id'],'merchant_id'=>$session['mer_id'])) -> data(array('status'=>2))->save();
            }else{
                $temp_status = M('order') -> where(array('id'=>$post['id'])) -> getField('temp_status');
                M('order') -> where(array('id'=>$post['id'])) -> data(array('status'=>$temp_status)) -> save();
                M('AfterSale') -> where(array('order_id'=>$post['id'],'merchant_id'=>$session['mer_id'])) -> data(array('status'=>9))->save();
            }
            $this -> ajaxReturn(array('status'=>'1','message'=>'操作成功'));
        }else{
            $this -> ajaxReturn(array('status'=>'0','message'=>'操作失败'));
        }
    }

    /**
     * 添加地址
     */
    function addAddress()
    {
        $request = $_POST;
        if(empty($request['order_id']) || !isset($request['order_id']))  $this->error('订单号不能为空');
//        if(empty($request['merchant_id']) || !isset($request['merchant_id']))  apiResponse('error','商家ID不能为空');
        // ==============
        if(empty($request['name']) || !isset($request['name']))$this->error('收货人不能为空');
        if(empty($request['phone']) || !isset($request['phone']))  $this->error('电话不能为空');
        if(empty($request['address']) || !isset($request['address'])) $this->error('请输入收货地址');
        if(empty($request['explain']) || !isset($request['explain'])) $this->error('请输入说明');

        $model = M('AfterSale') -> where(array('order_id'=>$request['order_id'])) -> data(array('status'=>3))->save();
        if($model){
            $asId = M('AfterSale') -> where(array('order_id'=>$request['order_id'])) -> getField('id');
            $sale[0]['key'] = '退货地址';
            $sale[1]['key'] = '说明';
            $sale[0]['value'] = $request['address'] . '('.$request['name'].'收)'. $request['phone'] ;
            $sale[1]['value'] = $request['explain'];
            $sale_data['title'] = '卖家已确认退货地址';
            $sale_data['log_type'] =  2;
            $sale_data['content'] =  serialize($sale);
            $sale_data['as_id'] = $asId;
            $sale_data['status'] =  3;
            $sale_data['create_time'] = time();
            M('AfterSaleLog') -> data($sale_data) ->add();
            unset($sale,$sale_data['title'],$sale_data['content']);
            $sale_data['status'] =  0;
            $money = M('AfterSale') -> where(array('order_id'=>$request['order_id'])) -> getField('money');
            $sale_data['title'] = '淘米公社已冻结卖家资金'.$money.'元,确保退货资金安全';
            M('AfterSaleLog') -> data($sale_data) ->add();
            $this->success('添加收货地址成功',Cookie('__forward__'));
        }else{
            $this->error('添加收货地址失败');
        }
    }

    /**
     * 确认收货
     */
    function affirmRefund()
    {
        $session = session('merInfo'); //mer_id
        $post = $_POST;
        $as_id = M('AfterSale') -> where(array('order_id'=>$post['id'],'merchant_id'=>$session['mer_id'])) -> getField('id');

        $model = M('AfterSale') -> where(array('order_id'=>$post['id'])) -> data(array('status'=>6))->save();
        if($model){
            $asId = M('AfterSale') -> where(array('order_id'=>$post['id'])) -> getField('id');
            $sale_data['create_time'] = time();
            $sale_data['title'] = '卖家以确认收货';
            $sale_data['log_type'] =  2;
            $sale_data['status'] =  5;
            $sale_data['as_id'] = $asId;
            M('AfterSaleLog') -> data($sale_data) ->add();

            $money = M('AfterSale') -> where(array('order_id'=>$post['id'])) -> field('money,m_id') -> find();
            M('Member')->where(array('id'=>$money['m_id'])) ->setInc('balance',$money['money']);
            $order_money = M('order') -> where(array('id'=>$post['id'])) -> getField('totalprice');
            $backMoney = $order_money-$money['money'] ;
            if($backMoney > 0){
                M('Merchant')->where(array('id'=>$session['mer_id'])) -> setInc('balance',$backMoney);
                $data['type'] = '2';
                $data['object_id'] = $session['mer_id'];
                $data['title'] = '订单快递费';
                $data['content'] = '增加余额';
                $data['symbol'] = '1';
                $data['money'] = $backMoney;
                $data['create_time'] = time();
                M('PayLog') -> data($data) ->add();
                unset($data);
            }
            $sale_data['status'] =  0;
            $sale_data['title'] = '淘米公社转移冻结资金'.$money['money'].'元';
            M('AfterSaleLog') -> data($sale_data) ->add();

            $sale[0]['value'] =  '卖家已同意申请,并确认退货,成功退款'.$money['money'].'元';
            $sale_data['title'] = '退款成功';
            $sale_data['status'] =  6;
            $sale_data['content'] =  serialize($sale);
            M('AfterSaleLog') -> data($sale_data) ->add();

            $data['type'] = '1';
            $data['object_id'] = $money['m_id'];
            $data['title'] = '订单退款';
            $data['content'] = '增加余额';
            $data['symbol'] = '1';
            $data['money'] = $money['money'];
            $data['create_time'] = time();
            M('PayLog') -> data($data) ->add();
            $this->success('确认退货完成');
        }else{
            $this->error('确认退货失败');
        }
    }
}
