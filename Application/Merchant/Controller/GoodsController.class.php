<?php

namespace Merchant\Controller;

/**
 * 商品
 * Class GoodsController
 * @package Merchant\Controller
 */
class GoodsController extends BaseController
{
    /*
 * ["mer_id"] => string(1) "登录ID"
 * ["mer_account"] => string(11) "手机号"
 * ["last_login_time"] => string(10) "最后登录时间"
 * */
    private $session = '';

    public function _initialize()
    {
        $this->session = session('merInfo');
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    /**
     * 获得商品属性
     */
    public function getClassifyList()
    {
        $where['parent_id'] = $_POST['id'];
        $Model = M('goods_type')->where($where)->field('id,cn_type_name')->select();
        $this->ajaxReturn($Model);
    }


    /**
     * 添加
     */
    function add()
    {
//        $this->checkRule(self::$rule);
        if (!IS_POST) {
            $this->getAddRelation();
            $row['unit'] = M('unit')->where()->select();
            $row['classify'] = M('goods_type')->where('parent_id=0')->field('id,type,cn_type_name,parent_id')->select(); // 三级分类
            $row['unit'] = M('unit')->where()->select();
            $this->assign('row', $row);
            $this->display('update');
        } else {
            $Object = D(CONTROLLER_NAME, 'Logic');
            $data = $_POST;
            $data['merchant_id'] = $this->session['mer_id'];
            $result = $Object->update($data);
            if ($result) {
                $this->success($Object->getLogicSuccess(), Cookie('__forward__'));
            } else {
                $this->error($Object->getLogicError());
            }
        }
    }

    /**
     * @var int thr 三级分类
     * @var int id  商品ID
     */
    public function attrUpdate()
    {
        $thr = $_GET['thr'];
        $id = $_GET['goods_id'];
        if(empty($thr) || empty($id)){
            $this->redirect('Goods/Index');
        }
        $is_merchant = '0,' . $this->session['mer_id'];
        $row['attr_list'] = M('attribute')->where(array('thr_g_t_id' => $thr, 'is_merchant' => array('in', $is_merchant),'status'=>array('neq',9)))->field('id,cn_attr_name')->select();
        $attr_count = count($row['attr_list']);
        foreach($row['attr_list'] as $k=>$v){
            $row['attr_list'][$k]['attr_cont'] = M('attribute_content')->where(array('thr_g_t_id' => $thr,'attr_id' => $v['id'], 'is_merchant' => array('in', $is_merchant),'status'=>array('neq',9)))->field('id,cn_attr_con_name')->select();
        }
        $row['list'] = M('goods_product')->where(array('goods_id' => $id,'status'=>array('neq',9)))->select();
        foreach ($row['list'] as $k => $v) {
            $attr_key_group = M('attribute_content')->where(array('id' => array('in', $v['attr_key_group']),'status'=>array('neq',9)))->field('cn_attr_con_name')->select();
            $attr_key_group = array_column($attr_key_group, 'cn_attr_con_name');
            $row['list'][$k]['attr_key_group'] = implode('>>>', $attr_key_group);
        }
        $this->assign('attr_count',$attr_count);
        $this->assign('goods_id',$id);
        $this->assign('thr', $thr);
        $this->assign('row', $row);
        $this->display();
    }

    /**
     * 删除 假删除 假置为9
     */
    function delete() {
        $Object = D(CONTROLLER_NAME,'Logic');
        $result = $Object->setAttrStatus(I('request.'));
        if($result) {
            $this->success($Object->getLogicSuccess());
        } else {
            $this->error($Object->getLogicError());
        }
    }

    /**
     * 添加商品属性值价格
     */
    public function attrAdd()
    {
        $post = $_POST;
        for($k = 1;$k <= $post['attr_count'] ; $k ++ ){
            if(!empty($post['attr_id_'.$k])){
                $array[] = $post['attr_id_'.$k];
            }
            unset($post['attr_id_'.$k]);
        }
        if($post['attr_count'] != count($array)){
            $this->error('请选择商品属性');
        }
        if($post['cn_price']==0 || $post['wholesale_prices'] ==0 || empty($post['cn_price'] || empty($post['wholesale_prices']))){
            $this->error('请输入正确的商品价格或批发价格');
        }
        if($post['cn_price'] - $post['wholesale_prices'] <= 0){
            $this->error('商品价格应该高于批发价格');
        }
        $array_list = joint($array);
        foreach($array_list[0] as $k=>$v){
            $attr_key_group =explode(',',$v);sort($attr_key_group);
            $attr_key_group = implode(',',$attr_key_group);
            if(M('GoodsProduct')->where(array('attr_key_group'=>$attr_key_group,'goods_id'=>$post['goods_id']))->count() == 0){
                $c['goods_id'] = $post['goods_id']; // 商品ID
                $c['wholesale_prices'] = $post['wholesale_prices']; // 批发价格
                $c['cn_price'] = $post['cn_price']; // 平台价格
                $c['attr_key_group'] = $attr_key_group; // 平台价格
                $c['merchant_id'] = $this->session['mer_id']; // 商家ID
               $model = M('GoodsProduct')->add($c);
            }
        }
        if($model){
            $this->success('添加成功','/Merchant/goods/attrUpdate/goods_id/'.$post['goods_id'].'/thr/'.$post['thr'].'.shtml');
        }else{
            $this->error('添加失败');
        }
    }

    /**
     * 属性值添加
     */
    public function attrValueAdd()
    {
        $Model = M('AttributeContent');
        $data = $_POST;
        $data['cn_attr_con_name'] = trim($data['cn_attr_con_name']);
        $data['create_time'] = time();
        $data['is_merchant'] = $this->session['mer_id'];
        $create = $Model->create($data);
        $add = $Model->add($data);
        if($create && $add){
            $data['info']= '成功';
            $data['status'] = '1';
            $data['data']['id'] = $add;
        }else{
            $data['info'] = '失败';
            $data['status'] = '0';
        }
        $this->ajaxReturn($data);
    }

    /**
     * $post['sec_g_t_id']
     */
    public function attrNameAdd()
    {
        $post = $_POST;
        $post['create_time'] = time();
        $goodsType = M('GoodsType');
        $parent_id = $goodsType-> where(array('id'=>$post['thr_g_t_id']))-> getField('parent_id');
        $sec_g_t_id = $goodsType -> where(array('id'=>$parent_id))->field('id,parent_id')->find();
        $post['sec_g_t_id']= $sec_g_t_id['id'];
        $fir_g_t_id = $goodsType -> where(array('id'=>$sec_g_t_id['parent_id']))->getField('id');
        $post['fir_g_t_id']= $fir_g_t_id['id'];
        $post['is_merchant'] = $this->session['mer_id'];
        $Model = M('attribute');
        $create = $Model -> create($post);
        $add = $Model->add();
        if($create && $add){
            $data['info']= '成功';
            $data['status'] = '1';
            $data['data']['id'] = $add;
        }else{
            $data['info'] = '失败';
            $data['status'] = '0';
        }
        $this->ajaxReturn($data);
    }
}
